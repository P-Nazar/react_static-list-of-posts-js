{"version":3,"sources":["components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/UserInfo/UserInfo.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","helpers/helpers.js","App.jsx","index.jsx"],"names":["CommentInfo","coment","className","name","href","email","body","CommentList","post","comments","length","map","id","UserInfo","user","PostInfo","title","PostList","posts","allPosts","userId","usersFromServer","find","commentsFromServer","filter","postId","App","useState","ReactDOM","render","document","getElementById"],"mappings":"+z8IAAaA,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACzB,sBACEC,UAAU,cADZ,UAGE,sBAAKA,UAAU,qBAAf,UACE,wBAAQA,UAAU,oBAAlB,SACGD,EAAOE,OAGT,OAED,mBACED,UAAU,qBACVE,KAAI,iBAAYH,EAAOI,OAFzB,SAIGJ,EAAOI,WAIZ,qBAAKH,UAAU,oBAAf,SACGD,EAAOK,WCjBDC,G,MAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACzB,qBAAKN,UAAU,cAAf,SACGM,EAAKC,SAASC,OACXF,EAAKC,SAASE,KAAI,SAAAV,GAAM,OACxB,cAAC,EAAD,CAAaA,OAAQA,GAAaA,EAAOW,OAGzC,mBAAG,UAAQ,oBAAX,iCCRKC,G,MAAW,SAAC,GAAD,IAAGL,EAAH,EAAGA,KAAH,OACtB,mBAAGN,UAAU,WAAWE,KAAI,iBAAYI,EAAKH,OAA7C,SACGG,EAAKM,KAAKX,SCAFY,G,MAAW,SAAC,GAAD,IAAGP,EAAH,EAAGA,KAAH,OACtB,sBACEN,UAAU,WADZ,UAGE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,kBAAd,SACGM,EAAKQ,QAGR,8BACG,eACD,cAAC,EAAD,CAAUR,KAAMA,UAIpB,mBAAGN,UAAU,iBAAb,SACGM,EAAKF,OAGR,uBACA,cAAC,EAAD,CAAaE,KAAMA,SCtBVS,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,qBAAKhB,UAAU,WAAf,SAEGgB,EAAMP,KAAI,SAAAH,GAAI,OACb,cAAC,EAAD,CAAUA,KAAMA,GAAWA,EAAKI,U,qBCQ/B,IAAMO,E,KAA2BR,KAAI,SAAAH,GAAI,kCAC3CA,GAD2C,IAE9CM,MAZeM,EAYDZ,EAAKY,OAXZC,EAAgBC,MAAK,SAAAR,GAAI,OAAIM,IAAWN,EAAKF,OAC7C,MAWPH,UARmBG,EAQGJ,EAAKI,GAPpBW,EAAmBC,QAAO,SAAAvB,GAAM,OAAIA,EAAOwB,SAAWb,MACtD,QAFT,IAAqBA,EALJQ,KCEJM,EAAM,WACjB,MAAgBC,mBAASR,GAAlBD,EAAP,oBAEA,OACE,0BAAShB,UAAU,MAAnB,UACE,oBAAIA,UAAU,aAAd,kCACA,cAAC,EAAD,CAAUgB,MAAOA,QCRvBU,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.df962a63.chunk.js","sourcesContent":["export const CommentInfo = ({ coment }) => (\n  <div\n    className=\"CommentInfo\"\n  >\n    <div className=\"CommentInfo__title\">\n      <strong className=\"CommentInfo__name\">\n        {coment.name}\n      </strong>\n\n      {' by '}\n\n      <a\n        className=\"CommentInfo__email\"\n        href={`mailto:${coment.email}`}\n      >\n        {coment.email}\n      </a>\n    </div>\n\n    <div className=\"CommentInfo__body\">\n      {coment.body}\n    </div>\n  </div>\n);\n","import { CommentInfo } from '../CommentInfo';\nimport './CommentList.scss';\n\nexport const CommentList = ({ post }) => (\n  <div className=\"CommentList\">\n    {post.comments.length\n      ? post.comments.map(coment => (\n        <CommentInfo coment={coment} key={coment.id} />\n      ))\n      : (\n        <b data-cy=\"NoCommentsMessage\">\n          No comments yet\n        </b>\n      )}\n\n  </div>\n);\n","import './UserInfo.scss';\n\nexport const UserInfo = ({ post }) => (\n  <a className=\"UserInfo\" href={`mailto:${post.email}`}>\n    {post.user.name}\n  </a>\n);\n","import { CommentList } from '../CommentList';\nimport { UserInfo } from '../UserInfo';\nimport './PostInfo.scss';\n\nexport const PostInfo = ({ post }) => (\n  <div\n    className=\"PostInfo\"\n  >\n    <div className=\"PostInfo__header\">\n      <h3 className=\"PostInfo__title\">\n        {post.title}\n      </h3>\n\n      <p>\n        {' Posted by  '}\n        <UserInfo post={post} />\n      </p>\n    </div>\n\n    <p className=\"PostInfo__body\">\n      {post.body}\n    </p>\n\n    <hr />\n    <CommentList post={post} />\n  </div>\n);\n","import { PostInfo } from '../PostInfo';\n\nexport const PostList = ({ posts }) => (\n  <div className=\"PostList\">\n\n    {posts.map(post => (\n      <PostInfo post={post} key={post.id} />\n    ))}\n  </div>\n);\n","import commentsFromServer from '../api/comments.json';\nimport usersFromServer from '../api/users.json';\nimport postsFromServer from '../api/posts.json';\n\nfunction getUser(userId) {\n  return usersFromServer.find(user => userId === user.id)\n      || null;\n}\n\nfunction getComments(id) {\n  return commentsFromServer.filter(coment => coment.postId === id)\n      || null;\n}\n\nexport const allPosts = postsFromServer.map(post => ({\n  ...post,\n  user: getUser(post.userId),\n  comments: getComments(post.id),\n}));\n","import { useState } from 'react';\nimport './App.scss';\n\nimport { PostList } from './components/PostList';\nimport { allPosts } from './helpers/helpers';\n\nexport const App = () => {\n  const [posts] = useState(allPosts);\n\n  return (\n    <section className=\"App\">\n      <h1 className=\"App__title\">Static list of posts</h1>\n      <PostList posts={posts} />\n    </section>\n  );\n};\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}