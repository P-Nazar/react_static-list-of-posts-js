{"version":3,"sources":["components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/UserInfo/UserInfo.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","helpers/helpers.js","App.jsx","index.jsx"],"names":["CommentInfo","comment","name","email","body","className","href","CommentList","comments","map","id","UserInfo","user","PostInfo","post","title","length","PostList","posts","allPosts","userId","usersFromServer","find","commentsFromServer","filter","coment","postId","App","useState","ReactDOM","render","document","getElementById"],"mappings":"+z8IAAaA,EAAc,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpBC,EAAsBD,EAAtBC,KAAMC,EAAgBF,EAAhBE,MAAOC,EAASH,EAATG,KAErB,OACE,sBACEC,UAAU,cADZ,UAGE,sBAAKA,UAAU,qBAAf,UACE,wBAAQA,UAAU,oBAAlB,SACGH,IAGF,OAED,mBACEG,UAAU,qBACVC,KAAI,iBAAYH,GAFlB,SAIGA,OAIL,qBAAKE,UAAU,oBAAf,SACGD,QCpBIG,G,MAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACzB,qBAAKH,UAAU,cAAf,SACGG,EAASC,KAAI,SAAAR,GAAO,OACnB,cAAC,EAAD,CAAaA,QAASA,GAAcA,EAAQS,WCJrCC,G,MAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACtB,mBAAGP,UAAU,WAAWC,KAAI,iBAAYM,EAAKT,OAA7C,SACGS,EAAKV,SCAGW,G,MAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACjBF,EAAmBE,EAAnBF,KAAMJ,EAAaM,EAAbN,SAEd,OACE,sBACEH,UAAU,WADZ,UAGE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,kBAAd,SACGS,EAAKC,QAEPH,GACC,8BACG,eACD,cAAC,EAAD,CAAUA,KAAMA,UAMtB,mBAAGP,UAAU,iBAAb,SACGS,EAAKV,OAGR,uBAECI,EAASQ,OAAS,EAEf,cAAC,EAAD,CAAaR,SAAUA,IAEvB,mBAAG,UAAQ,oBAAX,kCChCGS,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,qBAAKb,UAAU,WAAf,SAEGa,EAAMT,KAAI,SAAAK,GAAI,OACb,cAAC,EAAD,CAAUA,KAAMA,GAAWA,EAAKJ,U,qBCO/B,IAAMS,E,KAA2BV,KAAI,SAAAK,GAAI,kCAC3CA,GAD2C,IAE9CF,MAXeQ,EAWDN,EAAKM,OAVZC,EAAgBC,MAAK,SAAAV,GAAI,OAAIQ,IAAWR,EAAKF,OAC7C,MAUPF,UAPmBE,EAOGI,EAAKJ,GANpBa,EAAmBC,QAAO,SAAAC,GAAM,OAAIA,EAAOC,SAAWhB,QAD/D,IAAqBA,EALJU,KCEJO,EAAM,WACjB,MAAgBC,mBAAST,GAAlBD,EAAP,oBAEA,OACE,0BAASb,UAAU,MAAnB,UACE,oBAAIA,UAAU,aAAd,kCACA,cAAC,EAAD,CAAUa,MAAOA,QCRvBW,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.1234a347.chunk.js","sourcesContent":["export const CommentInfo = ({ comment }) => {\n  const { name, email, body } = comment;\n\n  return (\n    <div\n      className=\"CommentInfo\"\n    >\n      <div className=\"CommentInfo__title\">\n        <strong className=\"CommentInfo__name\">\n          {name}\n        </strong>\n\n        {' by '}\n\n        <a\n          className=\"CommentInfo__email\"\n          href={`mailto:${email}`}\n        >\n          {email}\n        </a>\n      </div>\n\n      <div className=\"CommentInfo__body\">\n        {body}\n      </div>\n    </div>\n  );\n};\n","import { CommentInfo } from '../CommentInfo';\nimport './CommentList.scss';\n\nexport const CommentList = ({ comments }) => (\n  <div className=\"CommentList\">\n    {comments.map(comment => (\n      <CommentInfo comment={comment} key={comment.id} />\n    ))}\n  </div>\n);\n","import './UserInfo.scss';\n\nexport const UserInfo = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n    {user.name}\n  </a>\n);\n","import { CommentList } from '../CommentList';\nimport { UserInfo } from '../UserInfo';\nimport './PostInfo.scss';\n\nexport const PostInfo = ({ post }) => {\n  const { user, comments } = post;\n\n  return (\n    <div\n      className=\"PostInfo\"\n    >\n      <div className=\"PostInfo__header\">\n        <h3 className=\"PostInfo__title\">\n          {post.title}\n        </h3>\n        {user && (\n          <p>\n            {' Posted by  '}\n            <UserInfo user={user} />\n          </p>\n        )}\n\n      </div>\n\n      <p className=\"PostInfo__body\">\n        {post.body}\n      </p>\n\n      <hr />\n\n      {comments.length > 0\n        ? (\n          <CommentList comments={comments} />\n        ) : (\n          <b data-cy=\"NoCommentsMessage\">\n            No comments yet\n          </b>\n        )}\n\n    </div>\n  );\n};\n","import { PostInfo } from '../PostInfo';\n\nexport const PostList = ({ posts }) => (\n  <div className=\"PostList\">\n\n    {posts.map(post => (\n      <PostInfo post={post} key={post.id} />\n    ))}\n  </div>\n);\n","import commentsFromServer from '../api/comments.json';\nimport usersFromServer from '../api/users.json';\nimport postsFromServer from '../api/posts.json';\n\nfunction getUser(userId) {\n  return usersFromServer.find(user => userId === user.id)\n      || null;\n}\n\nfunction getComments(id) {\n  return commentsFromServer.filter(coment => coment.postId === id);\n}\n\nexport const allPosts = postsFromServer.map(post => ({\n  ...post,\n  user: getUser(post.userId),\n  comments: getComments(post.id),\n}));\n","import { useState } from 'react';\nimport './App.scss';\n\nimport { PostList } from './components/PostList';\nimport { allPosts } from './helpers/helpers';\n\nexport const App = () => {\n  const [posts] = useState(allPosts);\n\n  return (\n    <section className=\"App\">\n      <h1 className=\"App__title\">Static list of posts</h1>\n      <PostList posts={posts} />\n    </section>\n  );\n};\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}